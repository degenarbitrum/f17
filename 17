def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var5 = class2()
    for var6 in func4(arg2, arg1):
        var5.func3(var6, arg2)
    var63 = -752782813 ^ -352
    var64 = 865 ^ (var63 + var63) + -848
    var65 = var63 + arg1 & arg1 | arg1
    if arg2 < var64:
        var66 = 879 ^ (var64 - var64)
    else:
        var66 = arg1 ^ arg1 + (var63 + var63)
    var67 = 178 ^ (1854511455 ^ var63) & arg2
    var68 = var64 ^ var65
    var69 = var63 & (-157 + var63) + arg2
    var70 = ((var63 + var64) ^ var69) - var63
    var71 = (-379 + 1527224549 ^ 67811588) | var63
    var72 = (var64 | var64 + var64) - var65
    if var65 < var68:
        var73 = (var72 - var63 ^ -1802837868) ^ var70
    else:
        var73 = -524076453 | -134105124 ^ var68
    var74 = var68 + var68
    var75 = (-275172461 + var71) & var64
    var76 = -677 + arg1 ^ var71
    var77 = var75 & var72
    var78 = 1036387528 & var68 | var74
    var79 = arg2 - var75 & var65
    var80 = (var75 - var67 - var67) | var75
    var81 = var75 & var76
    var82 = (var74 ^ var77 + var65) ^ var65
    result = var76 ^ arg1
    return result
def func5(arg9, arg10):
    var34 = func6(arg9, arg10)
    var39 = func8(var34, arg10)
    var40 = arg9 - (-329 - -1326781506) & var34
    var41 = (var40 | arg10 ^ var34) | arg10
    var42 = 347 ^ var34
    var43 = (var40 | var42) | (var41 | var40)
    var44 = var43 + var34 - var41 & var41
    var45 = (var39 + 780 ^ var39) + arg10
    var46 = (var43 & arg10 ^ 1243359523) + var40
    var47 = var43 ^ (var42 | var39) ^ var41
    if var40 < var40:
        var48 = arg10 - (-653 & var40 | var39)
    else:
        var48 = (var42 - (var41 - var44)) & var40
    var49 = (var44 | var42 | arg9) | var47
    var50 = var46 & ((var42 - var39) & arg10)
    var51 = var43 ^ var42
    result = (arg10 - var50 - var41 - (var45 - -513 + var34 - var43 & (var39 ^ var47 & var47) ^ -937)) & var44
    return result
def func8(arg35, arg36):
    var37 = 0
    for var38 in xrange(19):
        var37 += var38 ^ 7 | var37
    return var37
def func6(arg11, arg12):
    var17 = func7(arg12, arg11)
    if var17 < arg11:
        var18 = -586800237 - arg11
    else:
        var18 = arg12 & arg12
    var19 = var17 | arg12 - var17 & arg11
    var20 = 1325717545 ^ 1099720078 ^ (var17 | var19)
    if var20 < var17:
        var21 = var17 ^ (310 + -337 - var19)
    else:
        var21 = var17 + (var17 + 827617938 & arg11)
    if var19 < var19:
        var22 = -93 & (2124995140 - arg11 + var20)
    else:
        var22 = var17 - arg11
    var23 = var19 | -1762710756 - var20
    if var17 < var23:
        var24 = arg11 | var19 - arg12
    else:
        var24 = var17 | var17
    var25 = (var19 | (arg11 | var17)) & -584127073
    var26 = var20 - (arg11 ^ var19 | arg12)
    var27 = (var25 & arg12) ^ var20 - arg11
    var28 = var23 + var19 & var17
    var29 = var25 & arg11 & 111 & var25
    if var19 < var26:
        var30 = var17 + 119 | var17 + var20
    else:
        var30 = var19 ^ (var28 | -585)
    var31 = var17 | (var17 + (var23 + var29))
    var32 = -1184017098 & arg11
    var33 = var17 & var19
    result = var17 ^ arg12
    return result
def func7(arg13, arg14):
    var15 = 0
    for var16 in range(13):
        var15 += 2 + var15 - arg13
    return var15
def func4(arg7, arg8):
    var52 = func5(-1404551122, arg7)
    yield var52
    var53 = 584 & 287 & (arg7 | -341)
    yield var53
    var54 = arg7 | 153
    yield var54
    var55 = arg7 ^ arg7
    yield var55
    var56 = (arg8 & 1158443438) + arg7 + arg7
    yield var56
    var57 = (1839600726 | arg7 ^ arg8) | 1068307300
    yield var57
    var58 = arg7 - arg7 - var56
    yield var58
    var59 = (var54 + var53) | var57 ^ arg7
    yield var59
    var60 = var53 | 879
    yield var60
    var61 = var53 + var53
    yield var61
    var62 = (var53 | var58) + var58 | var57
    yield var62
class class2(object):
    def func3(self, arg3, arg4):
        result = (arg4 | ((arg4 + arg3) & 1 & arg4) ^ -1730151133) | 1
        return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 9'
    print 'arg_number: 83'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
